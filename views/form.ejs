<!DOCTYPE html>
<html>
    <head>
        <title>C3C Software</title>
        <link rel="stylesheet" href="/public/style.css" />
        <link
            href="https://fonts.googleapis.com/css?family=Montserrat"
            rel="stylesheet"
        />
        <script src="/public/jquery.min.js"></script>
        <script src="/public/jquery.inputmask.min.js"></script>
        <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    </head>

    <body>
        <div class="image-background">
            <div class="content">
                <!-- <div class="home-button">
                    <a href="/" class="image-button">
                        <img src="/public/home.svg" alt="" />
                    </a>
                </div> -->
                
                <div id="chat">
                    <div class="logo-menu">
                        <img src="/public/logo-form.png" alt="" />
                    </div>
                    <h1>&#127873; Participe do sorteio de uma JBL e um iPhone!</h1>
                    <div class="chat-scroll" ref="scroller">
                        <div class="chat-container">
                            <div
                                v-for="msg in messages"
                                :key="msg"
                                :class="`msg-container ${msg.sender}`"
                            >
                                <div
                                    :class="`pfp ${msg.sender} ${msg.last?'last':''}`"
                                ></div>
                                <div
                                    :class="`msg ${msg.sender} ${msg.last?'last':''}`"
                                >
                                    <p>{{ msg.content }}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="chat-input">
                        <select v-if="inputType=='select'" v-model="msgInput">
                            <option disabled value="">Nível do cargo</option>
                            <option value="VP">VP Level</option>
                            <option value="C">C Level</option>
                            <option value="Director">Director</option>
                            <option value="Manager">Manager</option>
                            <option value="Staff">Staff</option>
                            <option value="Outros">Outros</option>
                        </select>
                        <input
                            v-else
                            v-model="msgInput"
                            :type="inputType??'text'"
                            @keyup.enter="putMessage"
                            placeholder="Digite aqui..."
                        />
                        <button @click.prevent="putMessage">
                            <svg
                                viewBox="0 0 24 24"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                                stroke="#ffffff"
                            >
                                <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                <g
                                    id="SVGRepo_tracerCarrier"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                ></g>
                                <g id="SVGRepo_iconCarrier">
                                    <path
                                        d="M11.5003 12H5.41872M5.24634 12.7972L4.24158 15.7986C3.69128 17.4424 3.41613 18.2643 3.61359 18.7704C3.78506 19.21 4.15335 19.5432 4.6078 19.6701C5.13111 19.8161 5.92151 19.4604 7.50231 18.7491L17.6367 14.1886C19.1797 13.4942 19.9512 13.1471 20.1896 12.6648C20.3968 12.2458 20.3968 11.7541 20.1896 11.3351C19.9512 10.8529 19.1797 10.5057 17.6367 9.81135L7.48483 5.24303C5.90879 4.53382 5.12078 4.17921 4.59799 4.32468C4.14397 4.45101 3.77572 4.78336 3.60365 5.22209C3.40551 5.72728 3.67772 6.54741 4.22215 8.18767L5.24829 11.2793C5.34179 11.561 5.38855 11.7019 5.407 11.8459C5.42338 11.9738 5.42321 12.1032 5.40651 12.231C5.38768 12.375 5.34057 12.5157 5.24634 12.7972Z"
                                        stroke="#f5f5f5"
                                        stroke-width="2"
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                    ></path>
                                </g>
                            </svg>
                        </button>
                    </div>
                </div>
                <!-- <form id="form" action="/submit-form" method="POST">        
                    <input type="text" id="name" name="name" placeholder="Nome" required ><br>
                    <input type="text" id="company" name="company" placeholder="Nome de sua empresa" required ><br>
                    <input type="email" id="email" name="email" placeholder="Seu e-mail coorporativo" required ><br>
                    <input type="phone" id="phone" name="phone" placeholder="Seu telefone" required ><br>
                    <p id="phoneError" style="color: red; display: none;">Por favor, insira um número de telefone válido.</p>
                    <select name="title" id="title" required >
                        <option value="">Nível do cargo</option>
                        <option value="VP">VP Level</option>
                        <option value="C">C Level</option>
                        <option value="Director">Director</option>
                        <option value="Manager">Manager</option>
                        <option value="Staff">Staff</option>
                        <option value="Outros">Outros</option>
                    </select>
                    <div class="checkboxes-section">
                        <p>Você tem interesse em:</p>
                        <div class="checkboxes-container">
                            <label for="plugin" class="checkbox">Plugin WhatsApp Slack
                                <input type="checkbox" id="plugin" name="product" value="Plugin Whats App">
                                <span class="checkmark"></span>
                            </label>
                            <label for="crédito" class="checkbox">Esteira de crédito
                                <input type="checkbox" id="crédito" name="product" value="Esteira de crédito">
                                <span class="checkmark"></span>
                            </label>
                            <label for="programaPontos" class="checkbox">Programa de pontos
                                <input type="checkbox" id="programaPontos" name="product" value="Programa de pontos">
                                <span class="checkmark"></span>
                            </label>
                            <label for="salesforce" class="checkbox">Consultoria e/ou suporte
                                <input type="checkbox" id="salesforce" name="product" value="Consultoria e/ou Suporte">
                                <span class="checkmark"></span>
                            </label>
                        </div>
                    </div><br>
                    <div class="checkboxes-section">
                        <div class="checkboxes-container">
                            <label for="termos" class="checkbox">Eu aceito receber mensagens de WhatsApp e Emails da C3C Software e Vindi
                                <input type="checkbox" id="termos" name="termos" checked>
                                <span class="checkmark"></span>
                            </label>
                        </div>
                    </div>
                    <input id="enviar" type="submit" value="Enviar"><br>        
            </form> -->
            </div>
        </div>
    </body>
    <script>
        const { createApp, useTemplateRef, ref } = Vue;

        const promptMsgs = Object.entries({
            company: {
                msg: "Qual o nome da empresa em que você trabalha?",
                type: "text",
            },
            title: { msg: "Qual o seu cargo?", type: "select" },
            email: {
                msg: "Me passa um e-mail válido para entrarmos em contato?",
                type: "email",
            },
            phone: {
                msg: "Agora, seu celular com DDD, por favor?",
                type: "phone",
            },
        });

        const formFields = new Set([
            "name",
            "company",
            "title",
            "email",
            "phone",
        ]);

        const endMsgs = [
            `Centralização de dados dos clientes
            Salesforce permite reunir todas as informações dos seus clientes em um único lugar, facilitando o atendimento, a personalização e a tomada de decisões estratégicas.`,

            `Automatização de processos comerciais
            A plataforma automatiza tarefas repetitivas como envio de e-mails, atualizações de pipeline e geração de propostas, permitindo que sua equipe foque no relacionamento com o cliente.`,

            `Aumento da produtividade da equipe de vendas
            Com ferramentas como o Sales Cloud, seus vendedores têm visibilidade do funil de vendas, histórico de interações e próximos passos, melhorando a eficiência e o desempenho.`,

            `Melhoria no atendimento ao cliente
            O Service Cloud permite acompanhar chamados, SLA, canais de contato e garantir um suporte mais rápido e eficiente, aumentando a satisfação do cliente.`,

            `Integração com outras ferramentas da empresa
            Salesforce se conecta facilmente a sistemas legados, ERPs, e outras soluções como e-mail marketing, BI, e plataformas de atendimento, centralizando a operação.`,

            `Visão em tempo real da operação
            Através de dashboards e relatórios customizáveis, é possível monitorar KPIs e ter uma visão 360º da empresa em tempo real, apoiando decisões estratégicas.`,

            `Personalização do relacionamento com o cliente
            Com o Marketing Cloud ou Pardot, é possível segmentar, automatizar e personalizar campanhas de marketing com base no comportamento e no perfil dos clientes.`,

            `Escalabilidade e flexibilidade
            Salesforce cresce com o seu negócio, permitindo a adição de módulos, automações e customizações conforme suas necessidades evoluem.`,

            `Mobilidade para equipes em campo
            A plataforma pode ser acessada de qualquer lugar por meio do app móvel, facilitando a atuação de vendedores externos, técnicos ou gestores remotos.`,

            `Segurança e conformidade com LGPD
            Salesforce oferece padrões robustos de segurança e recursos de conformidade, como controle de acesso, criptografia e consentimento, alinhados às exigências da LGPD.`,
        ];

        let currentPrompt = "",
            currentFormEntry = "name";

        createApp({
            data() {
                return {
                    messages: [
                        {
                            content: "Olá! Qual o seu nome?",
                            sender: "page",
                            last: true,
                        },
                    ],
                    msgInput: "",
                    form: {},
                    inputType: "text",
                };
            },
            methods: {
                putMessage() {
                    console.log("putmessage call");
                    let newInput = this.msgInput;
                    if (
                        this.messages[this.messages.length - 1].sender == "user"
                    )
                        this.messages[this.messages.length - 1].last = false;
                    this.messages.push({
                        content: newInput,
                        sender: "user",
                        last: true,
                    });
                    this.msgInput = "";
                    if (formFields.has(currentFormEntry)) {
                        this.form[currentFormEntry] = newInput;
                        formFields.delete(currentFormEntry);
                    }
                    if (!formFields.size) {
                        const formBody = Object.entries(this.form)
                            .map(
                                ([key, value]) =>
                                    `${encodeURIComponent(
                                        key
                                    )}=${encodeURIComponent(value)}`
                            )
                            .join("&");

                        fetch("/submit-form", {
                            method: "POST",
                            headers: {
                                "Content-Type":
                                    "application/x-www-form-urlencoded;charset=UTF-8",
                            },
                            body: formBody,
                        }).then((res) => {
                            if (res.status == 200) {
                                this.messages.push({
                                    content:
                                        "Cadastro feito! Agora vamos ver como o Salesforce pode te ajudar...",
                                    sender: "page",
                                    last: false,
                                });
                                for (let i = 0; i < 3; i++) {
                                    const msg =
                                        endMsgs[
                                            (Math.random() * endMsgs.length) | 0
                                        ];
                                    this.messages.push({
                                        content: msg,
                                        sender: "page",
                                        last: i == 2,
                                    });
                                }
                            } else {
                                this.messages.push({
                                    content:
                                        "Tivemos um problema no seu cadastro, tente novamente!",
                                    sender: "page",
                                    last: true,
                                });
                            }
                        });
                    } else {
                        [nxtFormEntry, nxtMsg] = promptMsgs.shift();
                        currentFormEntry = nxtFormEntry;
                        this.inputType = nxtMsg.type;
                        this.messages.push({
                            content: nxtMsg.msg,
                            sender: "page",
                            last: true,
                        });
                    }
                },
                
            },
            watch:{
                messages: {
                    handler(){
                        console.log('msg update')
                        this.$refs.scroller.scroll({ behavior: "smooth", top: this.$refs.scroller.scrollHeight})
                    },
                    deep:true
                }
            }
        }).mount("#chat");
    </script>

    <script>
        $(document).ready(function () {
            Inputmask({
                mask: "+55 (99) 99999-9999", // Máscara para telefone brasileiro
                placeholder: "_",
                showMaskOnHover: false,
                showMaskOnFocus: true,
            }).mask("#phone");

            $("#form").on("submit", function (event) {
                var telefone = $("#phone").val();
                var regex = /^\+55 \(\d{2}\) \d{5}-\d{4}$/; // Expressão regular para validar o formato do telefone

                if (!regex.test(telefone)) {
                    event.preventDefault(); // Impede o envio do formulário
                    $("#phoneError").show(); // Mostra a mensagem de erro
                } else {
                    $("#phoneError").hide(); // Esconde a mensagem de erro
                }
            });

            $("#termos").change(function () {
                if ($(this).is(":checked")) {
                    $("#enviar").prop("disabled", false);
                } else {
                    $("#enviar").prop("disabled", true);
                }
            });
        });
    </script>
</html>
